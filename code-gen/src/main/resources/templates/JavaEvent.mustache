package com.vmlens.trace.agent.bootstrap.event.gen;

import java.io.DataOutputStream;
import com.vmlens.trace.agent.bootstrap.event.LoopIdAndRunId;
import com.vmlens.trace.agent.bootstrap.event.stream.StreamRepository;
import com.vmlens.trace.agent.bootstrap.event.stream.StreamWrapperWithLoopIdAndRunId;

public class {{className}}  {

{{#javaFields}}
    protected {{javaType}}     {{name}};
{{/javaFields}}

@Override
public boolean equals(Object o) {
    if (this == o) return true;
    if (o == null || getClass() != o.getClass()) return false;

    {{className}} that = ({{className}}) o;
{{#javaFields}}
    if ( {{name}} != that.{{name}}) return false;
{{/javaFields}}
    return true;
}

@Override
public String toString() {
    return "{{className}}{" +
{{#javaFields}}
    "{{name}}=" + {{name}} +
{{/javaFields}}
    '}';
}



 public StreamWrapperWithLoopIdAndRunId getStream(StreamRepository streamRepository)  {
     return streamRepository.{{eventTypeInvertCamelCase}};
 }

public void serialize(DataOutputStream buffer) throws Exception {
buffer.write( (byte)  {{eventId}} );
{{#javaFields}}
    {{writeJavaElement}}
{{/javaFields}}
}


}