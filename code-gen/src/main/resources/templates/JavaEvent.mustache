package com.vmlens.trace.agent.bootstrap.event.gen;

import java.nio.ByteBuffer;
import com.vmlens.trace.agent.bootstrap.event.LoopIdAndRunId;
import com.vmlens.trace.agent.bootstrap.event.stream.StreamRepository;


public class {{className}}  {

{{#javaFields}}
    protected {{javaType}}     {{name}};
{{/javaFields}}

@Override
public boolean equals(Object o) {
    if (this == o) return true;
    if (o == null || getClass() != o.getClass()) return false;

    {{className}} that = ({{className}}) o;
{{#javaFields}}
    if ( {{name}} != that.{{name}}) return false;
{{/javaFields}}
    return true;
}

@Override
public String toString() {
    return "{{className}}{" +
{{#javaFields}}
    "{{name}}=" + {{name}} +
{{/javaFields}}
    '}';
}



 public void serialize(StreamRepository streamRepository) throws Exception {
     serialize( streamRepository.{{eventTypeInvertCamelCase}}.
                     getByteBuffer(new LoopIdAndRunId(loopId,runId),  {{writtenLength}}, EventConstants.MAX_ARRAY_SIZE * 1000));

 }

public void serialize(ByteBuffer buffer) throws Exception {
buffer.put( (byte)  {{eventId}} );
{{#javaFields}}
    {{writeJavaElement}}
{{/javaFields}}
}


}