# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java-version: [11, 17, 23, 24]

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK ${{ matrix.java-version }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ matrix.java-version }}
          distribution: temurin
          cache: maven

      - name: Ensure version stable
        run: |
          VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          echo "Maven version: $VERSION"
          if [[ "$VERSION" == *SNAPSHOT* ]]; then
            echo "SNAPSHOT version detected"
            exit 1
          fi

      - name: Build with Maven
        run: mvn -B install --file pom.xml

      - name: Upload build artifacts
        if: ${{ failure() }}
        uses: actions/upload-artifact@v4
        with:
          name: my-artifact-${{ matrix.java-version }}
          path: |
            test-vmlens-maven-plugin/target/vmlens-report/
            test-vmlens-maven-plugin/target/vmlens-agent/vmlens/
            vmlens-maven-plugin/target/invoker/